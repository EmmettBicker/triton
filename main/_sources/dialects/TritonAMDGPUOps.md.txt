# TritonAMDGPUOps<!-- Autogenerated by mlir-tblgen; don't manually edit -->
### `amdgpu.instruction_sched_hint` (triton::amdgpu::InstructionSchedHint)

_A placeholder op for instruction scheduling hints within a basic block_


Syntax:

```
operation ::= `amdgpu.instruction_sched_hint` attr-dict
```

A placeholder op for instruction scheduling hints applied to instructions within
a basic block where the placeholder op is located. This op is primarily intended
to be used to adjust instruction scheduling inside the resulting main loop
of a `tt.dot` operation. It's easier to identify dot ops at a high level and, thus,
to mark intended scheduling regions. The hint ops are eventually lowered
into LLVM AMDGPU instruction scheduling primitives, which are meant to control
how different kinds of instructions (valu/mfma, global/shared memory, etc.) should
interleave for better instruction level parallelism.

#### Attributes:

<table>
<tr><th>Attribute</th><th>MLIR Type</th><th>Description</th></tr>
<tr><td><code>numDsReadsA</code></td><td>::mlir::triton::amdgpu::InstCounterAttr</td><td><details><summary>An instruction counter attribute.</summary>{{% markdown %}}
    The attribute holds the number of issued LLVM instructions of a specific kind as well as
    the data type.
  {{% /markdown %}}</details></td></tr>
<tr><td><code>numDsReadsB</code></td><td>::mlir::triton::amdgpu::InstCounterAttr</td><td><details><summary>An instruction counter attribute.</summary>{{% markdown %}}
    The attribute holds the number of issued LLVM instructions of a specific kind as well as
    the data type.
  {{% /markdown %}}</details></td></tr>
<tr><td><code>numDsWritesA</code></td><td>::mlir::triton::amdgpu::InstCounterAttr</td><td><details><summary>An instruction counter attribute.</summary>{{% markdown %}}
    The attribute holds the number of issued LLVM instructions of a specific kind as well as
    the data type.
  {{% /markdown %}}</details></td></tr>
<tr><td><code>numDsWritesB</code></td><td>::mlir::triton::amdgpu::InstCounterAttr</td><td><details><summary>An instruction counter attribute.</summary>{{% markdown %}}
    The attribute holds the number of issued LLVM instructions of a specific kind as well as
    the data type.
  {{% /markdown %}}</details></td></tr>
<tr><td><code>numGlobalLoadsA</code></td><td>::mlir::triton::amdgpu::InstCounterAttr</td><td><details><summary>An instruction counter attribute.</summary>{{% markdown %}}
    The attribute holds the number of issued LLVM instructions of a specific kind as well as
    the data type.
  {{% /markdown %}}</details></td></tr>
<tr><td><code>numGlobalLoadsB</code></td><td>::mlir::triton::amdgpu::InstCounterAttr</td><td><details><summary>An instruction counter attribute.</summary>{{% markdown %}}
    The attribute holds the number of issued LLVM instructions of a specific kind as well as
    the data type.
  {{% /markdown %}}</details></td></tr>
<tr><td><code>numMMAs</code></td><td>::mlir::triton::amdgpu::InstCounterAttr</td><td><details><summary>An instruction counter attribute.</summary>{{% markdown %}}
    The attribute holds the number of issued LLVM instructions of a specific kind as well as
    the data type.
  {{% /markdown %}}</details></td></tr>
</table>

